Ethan Paffe
COP4620 M/W 1:30 P.M.  Project 4
C- Parser/ Semantic Analyzer
Dr. Eggen

Submitted: 04/02/20
Due: 04/02/20

This is a parser that works in conjunction with the lexical analyzer to 
determine if a given file contains C- tokens written in the proper order. 
The parser functions based on a provided grammar for C- that has been 
modified to function properly in the application of a LL(1) type parser 
by removing left recursion and left factoring that would otherwise cause 
the parser to loop endlessly. Each rule has been implimented as a function 
that calls the next approprite function based on the symbol observed. The 
parser must have the lexical anaalyzer present in the same file in order 
to receive tokens from the file given. In order to use the parser one need 
only call its script, named p2, with a text file given as a parameter. The 
parser will simply print "ACCEPT" if the given file is appropriately 
written in C- and "REJECT" otherwise, no additional files will be created 
in the proccess of the parsers execution. No special concerns exist 
regarding the parser at this time.

Project four is an addition of functionality to project 2 and requires the
same input files and gives the same type of output. The project adds
semantic checks to the parser such as argument/parameter agreement, operator
and operand agreement, return paths in functions marked for returns, and the
presence of one and only one main, as well as other more specific semantic
checks. The purpose of the project is to ensure type agreement and compliance
with the rules of C- outside of the rules explicitly given by the grammar.
